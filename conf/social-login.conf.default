#####################################################################################
#
# play-authenticate settings
#
#####################################################################################

play-authenticate {

    # If set to true, account merging is enabled, if set to false its disabled and accounts will never prompted to be merged
    # defaults to true
    accountMergeEnabled=false

    # if this is set to true, accounts are automatically linked
    # (e.g. if a user is logged in and uses a different authentication provider
    # which has NOT yet been registered to another user, this newly used authentication
    # provider gets added to the current local user
    # Handle setting this to true with care
    # If set to false, your resolver must not return null for askLink()
    # defaults to false
    accountAutoLink=true

    # Settings for the google-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Google provider from conf/play.plugins
    google {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }

        # Google credentials
        # These are mandatory for using OAuth and need to be provided by you,
        # if you want to use Google as an authentication provider.
        # Get them here: https://code.google.com/apis/console
        # Remove leading '#' after entering

        # Following key values are used for test. You must set it your own values.
        clientId=300340907286-8gr74ghhenrqgk2ioavjip36qm2bbvn1.apps.googleusercontent.com
        clientSecret=ocFoKh7De6nDQm1x-lGxcGRO
    }

    github {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }

        # Following three keys are used for Yona to Github Enterprise login support only
        # If you just need to use Github.com login, don't uncomment it.
        #
        # authorizationUrl="https://your-github-enterprise/login/oauth/authorize"
        # accessTokenUrl="https://your-github-enterprise/login/oauth/access_token"
        # userInfoUrl="https://your-github-enterprise/api/v3/user"

        # Accessible scope
        scope="user:email"

        # Following key values are used for test. You must set it your own values.
        clientId=add60851e36488138581
        clientSecret=3f9472dcd7cb4c3c09e06b03f97f1b5fe2315af3
    }
}